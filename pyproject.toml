[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "revelation"
dynamic = ["version"]
description = "Make awesome reveal.js presentations with revelation"
readme = "README.md"
requires-python = ">= 3.10"
license = "MIT"
keywords = [
  "presentation",
  "slides",
  "reveal.js",
  "cli",
]
authors = [
  { name = "Humberto Rocha", email = "humrochagf@gmail.com" },
]
classifiers = [
  "Environment :: Console",
  "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
  "Jinja2~=3.1.2",
  "Werkzeug[watchdog]~=2.2.2",
  "platformdirs",
  "typer~=0.16.0",
]

[project.scripts]
revelation = "revelation.cli:cli"
rv = "revelation.cli:cli"

[project.urls]
Documentation = "https://github.com/humrochagf/revelation"
Issues = "https://github.com/humrochagf/revelation/issues"
Source = "https://github.com/humrochagf/revelation"

[tool.hatch.version]
path = "revelation/__init__.py"

[tool.hatch.envs.default]
dependencies = [
  "coveralls==3.3.1",
  "mypy",
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "ruff",
]

[tool.hatch.envs.default.scripts]
cov = "pytest --cov"
tests = "pytest {args:tests}"
typing = "mypy --install-types --non-interactive {args:revelation tests}"
lint = "ruff check {args:.}"
fmt = [
  "isort .",
  "ruff format {args:.}",
]

[tool.isort]
profile = "black"
skip = [
  ".env",
  ".hatch",
  ".mypy_cache",
  ".venv",
  "__pycache__",
  "env",
  "venv",
]

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Same line string implicit string concatenation
  "ISC001",
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["revelation"]

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["revelation", "tests"]
branch = true
parallel = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
disallow_incomplete_defs = true
check_untyped_defs = true
warn_unused_ignores = true
exclude = """
  .env
  | .hatch
  | .mypy_cache
  | .venv
  | __pycache__
  | env
  | venv
"""
